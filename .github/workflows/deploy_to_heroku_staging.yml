name: Heroku (staging)

on:
  push:
    branches: [dev, deploy_config, debug_validator, debugging_slow_queries]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-cargo

      - name: AccountsDB consumer
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: accounts-db-consumer-staging
          dockerfile_name: Dockerfile
          docker_options: '--target accountsdb-consumer'
          process_type: worker

      - name: HTTP consumer
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: accountsdbhttpconsumerstaging
          dockerfile_name: Dockerfile
          docker_options: '--target http-consumer'
          process_type: worker

      - name: GraphQL server
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: indexer-graphql-staging
          dockerfile_name: Dockerfile
          docker_options: '--target graphql'
